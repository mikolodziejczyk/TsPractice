!function(t){var n={};function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),e.d(n,"MyApp",function(){return o});var o=function(){function t(){var t=this;this.testJson=function(){var n=parseInt(jQuery("#myData").val()),e=t.getByJson(n);e.done(function(t){console.log("Success: "+t)}),e.fail(function(t){console.log("Failure: "+t)})}}return t.prototype.initialize=function(){},t.prototype.delay=function(t,n){return new Promise(function(e,o){setTimeout(function(){(new Date).getTime()%2==0?e(n):o()},t)})},t.prototype.getByJson=function(t){return $.ajax({url:"GetValueJson",type:"POST",contentType:"application/json;charset=utf8",dataType:"json",data:JSON.stringify({id:t})})},t}();jQuery(document).ready(function(){var t=new o;window.myApp=t,t.initialize(),jQuery("#start").click(t.testJson)})}]);
//# sourceMappingURL=await.js.map